@page
@using Wiki.Web.Extensions
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@model Wiki.Web.Pages.Articles.GetModel
@{
    ViewData["Title"] = "Get";
}

<style>
    .article {
        background-color: lightgray;
        color: black;
        padding: 10px;
        border: 10px
    }
    
    
</style>
<div class="row">
    <div class="col-md-12">
        <h2>@Model.Article.Title</h2>
        <p>Author: @Model.Article.Author.Email</p>
        <p>Tags: @Model.Article.Tags.Select(x => x.Tag).AsString()</p>
        <p>Category: @Model.Article.Category.Category</p>
        <p>Created At: @Model.Article.CreatedAt</p>
        @if (Model.Article.Comment != null)
        {
            <p class="text-info">Comment to this version: @Model.Article.Comment</p>
        }
        @if (HttpContextAccessor.HttpContext.User.IsInRole("Read"))
        {
            <p>Status: @Model.Article.Status.Status</p>

        }

    </div>
    <div class="col-md-10">
        @if (Model.Article.Avatar != null)
        {
            <img src="@Model.Article.Avatar" style="width:100%" />
        }
        @Html.Raw("<div class=\"article\">" + Model.Article.Content + "</div>")
    </div>
    <div class="col-md-2 table-bordered" style="float:right">
        <a data-toggle="modal" data-target="#suggestionModal">Add suggestion</a><br />
        @if (Model.HttpContext.User.Identity.IsAuthenticated)
        {
            @if (!(Model.Article.Status.Status == "NotSubmitted" && Model.Article.Author.Id != Model.UserId))
            {
                <a asp-page="/Articles/Add" asp-route-textid="@Model.Article.TextId">Edit</a><br />
            }
            @if (Model.Article.Supervisor != null)
            {
                @if (@Model.Article.Status.Status == "Moderated" && HttpContextAccessor.HttpContext.User.IsInRole("Accept") && Model.UserId == Model.Article.Supervisor.Id)
                {
                    <a asp-page="/Articles/Modify" asp-route-textid="@Model.Article.TextId" asp-route-status="22">Accept</a><br />
                    <a data-toggle="modal" data-target="#rejectModal">Reject</a>
                }
            }
            @if (@Model.Article.Status.Status == "Waiting" && HttpContextAccessor.HttpContext.User.IsInRole("Accept"))
            {
                <a asp-page="/Articles/Modify" asp-route-textid="@Model.Article.TextId" asp-route-status="61">Become supervisor</a><br />
            }
            @if (HttpContextAccessor.HttpContext.User.IsInRole("Read"))
            {
                @*<a asp-page="/Articles/Compare" asp-route-textid="@Model.Article.TextId">Compare to master</a><br />*@
                <a data-toggle="modal" data-target="#comparisionModal">Compare to master</a><br />

            }
            @if (@Model.Article.Status.Status == "Accepted" && HttpContextAccessor.HttpContext.User.IsInRole("Publish"))
            {
                <a asp-page="/Articles/Modify" asp-route-textid="@Model.Article.TextId" asp-route-status="1">Make Master</a><br />
            }
        }
    </div>

    <br/><br/>
    @if (Model.User.IsInRole("Read"))
    {
        <button class="collapsible">Show other versions of this article</button>
        <div class="content">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Title
                        </th>
                        <th>
                            Version
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OtherVersions)
                    {
                        <tr>
                            <td>
                                <a asp-page="/Articles/Get" asp-route-articleid="@item.ArticleId" asp-route-textid="@item.TextId">@Html.DisplayFor(modelItem => item.Title)</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Version)
                            </td>

                        </tr>
                    }
                </tbody>


            </table>
        </div>
    }

    <script>
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
          coll[i].addEventListener("click", function() {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.maxHeight){
              content.style.maxHeight = null;
            } else {
              content.style.maxHeight = content.scrollHeight + "px";
            }
          });
        }
    </script>

    <!-- The Modal -->
    <div class="modal fade" id="suggestionModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Suggestion:</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <form method="post">
                    <div class="modal-body">
                        @if (Model.User.Identity.IsAuthenticated)
                        {
                            <input type="checkbox" asp-for="@Model.Suggestion.IsAnonymous" />
                            <label>Add as anonymous user</label><br />
                        }
                        <textarea asp-for="@Model.Suggestion.Content"></textarea>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger">Submit</button>
                    </div>
                </form>

            </div>
        </div>
    </div>



    <!-- The Modal -->
    <div class="modal fade" id="rejectModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Reason:</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <form asp-page="./Modify" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="textid" value="@Model.Article.TextId" />
                        <textarea name="reason"></textarea>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger">Submit</button>
                    </div>
                </form>

            </div>
        </div>
    </div>

    <!-- Trigger/Open The Modal -->
    <!-- The Modal -->
    <div class="modal fade" id="comparisionModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Comparision:</h4>
                    @Html.Raw(Model.TitleComparision)
                </div>

                <!-- Modal body -->

                <div class="modal-body">
                    @Html.Raw("<div class=\"article\">" + Model.ContentComparision + "</div>")
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger center-block" data-dismiss="modal">Close</button>

                </div>


            </div>
        </div>
    </div>

    <!-- Trigger/Open The Modal -->



</div>
