@page
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@model ArticlesModel
@{
    ViewData["Title"] = "About";
}
<h2>@ViewData["Title"]</h2>

<form asp-page="./Articles" method="get">

    <div class="form-actions no-color">
        <p>
            Find by name:
        </p>
        <input type="text" name="title" value="@Model.Filter.Title" />
        <label>Category</label>
        <select asp-items="@Model.Filter.Categories" name="selectedCategory"></select>

        <table>
            <tr>
                @{
                    foreach (var tag in Model.Filter.Tags)
                    {
                        @:<td>
                            <input type="checkbox"
                                   name="selectedTags"
                                   value="@tag.Id"
                                   @(Html.Raw(tag.Checked ? "checked=\"checked\"" : "")) />
                            @tag.Tag
                        @:</td>
                    }
                @:</tr>
                }
            </table>

            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </form>
    <a asp-page="./Articles">Back to full List</a>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Category
                </th>
                @if (HttpContextAccessor.HttpContext.User.Claims.Where(x => x.Type.Contains("role")).Where(y => y.Value == "Read").SingleOrDefault() != null)
                {
                <th>
                    Status
                </th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Articles)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Category)
                    </td>
                    <td>
                        @if (HttpContextAccessor.HttpContext.User.Claims.Where(x => x.Type.Contains("role")).Where(y => y.Value == "Read").SingleOrDefault() != null)
                        {
                            @Html.DisplayFor(modelItem => item.Status)
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>